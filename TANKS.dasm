;date: Dec 29, 2021
;file: tank.dasm
;
;Abbreviations:
;
;*B1 = * ball1
;*B0 = * ball0
;TDIR0 =  tank0 direction
;TDIR1 = tank1 direction
;BDIR0 = ball0 direction
;BDIR1 = ball1 direction
;_TWB0/1 = test wall ball0/1
;_TDB0/1 = tests done ball0/1
;_NB0/1 = north ball0/1
;_SB0/1 = south ball0/1
;_EB0/1 = east ball0/1
;_WB0/1 = west ball0/1
;_TYB0/1 = test Y ball0/1
;_TXB0/1 = test X ball0/1
;NE = north east
;SE = south east
;SW = south west
;NW = north west
;BR = bridge
  seg.u ZEROPAGE
  org $0

  ;NES cartridge header
  NES_HEADER 0,2,1,1 ; mapper 0, 2 PRGs, 1 CHR, horiz. mirror

START:
NES_INIT    

;first vblank, need two
  JSR WaitSync

;differs from 8bitworkshop.com ClearRam. Puts 254 in sprite
;values. Not a function call so no stack management.
CLEAR_MEMORY:
  LDX #$00
CLEAR:
  LDA #$00
  STA $0000,X
  STA $0100,X
  STA $0300,X
  STA $0400,X
  STA $0500,X
  STA $0600,X
  STA $0700,X
  LDA #$FE
  STA $0200,X
  INX
  BNE CLEAR

;second vblank, PPU ready
  JSR WaitSync

;load color palettes
  PPU_SETADDR $3F00     ;write to PPU
  JSR LOAD_BG_PALETTE   ;load background palette
  JSR LOAD_SPR_PALETTE  ;load sprite palette

;load background & sprites
  PPU_SETADDR $2000         ;write to PPU
  JSR LOAD_BACKGROUND       ;load background image
  JSR INIT_PLAY             ;initialize playing field sprites
  JSR LOAD_SPRITES          ;load sprites into memory
  JSR DRAWSPRITES           ;draw sprites

;load attributes
  PPU_SETADDR $23C0     ;write to PPU
  JSR LOAD_ATTRIBUTES

;turn off scrolling
  LDA #$00
  STA PPU_SCROLL
  LDA #$00
  STA PPU_SCROLL

;controllers take turns with reads
  LDA #$00
  STA JOYREAD

;non-maskable interrupts enabled
  LDA #CTRL_NMI
  STA PPU_CTRL

;endless loop for game play	    
.ENDLESS
  JMP .ENDLESS

;ppu specific functions/macros
  include "tankppu.dasm"

;NES specific variables, contants, macros, functions
;application specific variables and constants
  include "tankdefs.dasm"

;audio routines - gun noise
  include "apu.dasm"

LOAD_SPR_PALETTE: subroutine
  LDX #$00              
LSP:
  LDA SPR_PAL_TBL,X     
  STA $2007					    
  INX      	            
  CPX #$10     
  BNE LSP  
  RTS

LOAD_BG_PALETTE: subroutine
  LDX #$00              
LBP:
  LDA BG_PAL_TBL,X                                  
  STA $2007             
  INX                   
  CPX #$10              
  BNE LBP               
  RTS

BG1_LOOP: subroutine
  LDY #$00
LB1:
  LDX ARG0 
LB1A:
  LDA BG1_TBL,X         
  STA PPU_DATA        
  INX                   
  CPX ARG1              
  BNE LB1A
  INY            
  CPY ARG2
  BNE LB1
  RTS

BG2_LOOP: subroutine
  LDY #$00
LB2:
  LDX ARG0 
LB2A:
  LDA BG2_TBL,X         
  STA PPU_DATA        
  INX                   
  CPX ARG1              
  BNE LB2A
  INY            
  CPY ARG2
  BNE LB2
  RTS

LOAD_BACKGROUND: subroutine
  LDA #$00
  STA ARG0
  LDA #$40
  STA ARG1
  LDA #$01
  STA ARG2
  JSR BG1_LOOP

  LDA #$40
  STA ARG0
  LDA #$80
  STA ARG1
  LDA #$02
  STA ARG2
  JSR BG1_LOOP

  LDA #$00
  STA ARG0
  LDA #$C0
  STA ARG1
  LDA #$01
  STA ARG2
  JSR BG2_LOOP

  LDA #$40
  STA ARG0
  LDA #$80
  STA ARG1
  LDA #$03
  STA ARG2
  JSR BG1_LOOP

  LDA #$00
  STA ARG0
  LDA #$C0
  STA ARG1
  LDA #$01
  STA ARG2
  JSR BG2_LOOP

  LDA #$40
  STA ARG0
  LDA #$80
  STA ARG1
  LDA #$02
  STA ARG2
  JSR BG1_LOOP

  LDA #$00
  STA ARG0
  LDA #$40
  STA ARG1
  LDA #$01
  STA ARG2
  JSR BG1_LOOP
  RTS

LOAD_ATTRIBUTES: subroutine

  ;execute NMI on vblank, use 8x8 sprites, bg pattern table at 0, sprite pattern table at 0
  ;increment PPU addy by 1 - horizontal, Name table addy at $2000. See PPU_CTRL flags in tankdefs.dasm                            
  LDA #%1000000
  STA PPU_CTRL

  ;light blue bg tint
  LDA #$1C
  STA PPU_MASK

  ;sprites visible, background visible, no background clipping on left
  ;side, display in color. See PPU_MASK flags in tankdefs.dasm.
  LDA #%0011110
  STA PPU_MASK

  RTS

;interrupt handlers
NMIHANDLER:     

  ;DMA transfer
  LDA #$02
  STA PPU_OAM_DMA

  ;take turns reading controllers
  LDA JOYREAD
  CMP #$01
  BEQ READJOY1

;controller 1
READJOY0:
  LDA #$01
  STA JOYREAD
  JSR ReadJoypad0	       
  STA JOYPAD_BITMASK0
  JMP DO_COMMAND0

;controller 2
READJOY1:
  LDA #$00
  STA JOYREAD
  JSR ReadJoypad1	        
  STA JOYPAD_BITMASK1
  JMP DO_COMMAND1

;do controller 1 command
DO_COMMAND0:
.EAST_WEST_TEST:
  LDA JOYPAD_BITMASK0
  AND #$03	            
  TAX		
  LDA DIR_TBL,X	  
  CMP #$00
  BNE .EAST_WEST_CALL
  JMP .NORTH_S_TEST
.EAST_WEST_CALL:
  JSR EAST_WEST0
  JMP .EXIT0
.NORTH_S_TEST:
  LDA JOYPAD_BITMASK0
  LSR
  LSR
  STA JOYPAD_BITMASK0
  AND #$03	
  TAX		
  LDA DIR_TBL,X
  CMP #$00        
  BNE .NORTH_S_CALL
  JMP .MOVE_SHOOT_TEST
.NORTH_S_CALL:
  JSR NORTH_SOUTH0
  JMP .EXIT0
.MOVE_SHOOT_TEST:
  LDA JOYPAD_BITMASK0
  LSR
  LSR
  LSR
  LSR
  TAX
  CPX #$00  
  BEQ .EXIT0
  CPX #$02                
  BEQ .CALL_MOVE_TANK0    ;button_a
  CPX #$01
  BEQ .CALL_TAKE_SHOT0    ;button_b
.CALL_MOVE_TANK0:
  LDX #$01
  STX TANK0_MOVING
  JSR MOVE_TANK0
  JMP .EXIT0
.CALL_TAKE_SHOT0:
  LDX BALL_MOVING0
  CPX #$01
  BEQ .KEEP_MOVING
  JSR RELOAD0
  JSR TAKE_SHOT0
.KEEP_MOVING:
  JSR MOVE_BALL0
  LDX BALL_MOVING0
  CPX #$00
  BNE .KEEP_MOVING
  JMP .EXIT0
.EXIT0:
  JSR DRAWSPRITES
  RTI

;do controller 2 command
DO_COMMAND1:
.EAST_WEST_TEST1:
  LDA JOYPAD_BITMASK1
  AND #$03	            
  TAY		
  LDA DIR_TBL,Y	  
  CMP #$00
  BNE .EAST_WEST_CALL1
  JMP .NORTH_S_TEST1
.EAST_WEST_CALL1:
  JSR EAST_WEST1
  JMP .EXIT1
.NORTH_S_TEST1:
  LDA JOYPAD_BITMASK1
  LSR
  LSR
  STA JOYPAD_BITMASK1
  AND #$03	
  TAY		
  LDA DIR_TBL,Y 
  CMP #$00        
  BNE .NORTH_S_CALL1
  JMP .MOVE_SHOOT_TEST1
.NORTH_S_CALL1:
  JSR NORTH_SOUTH1
  JMP .EXIT1
.MOVE_SHOOT_TEST1:
  LDA JOYPAD_BITMASK1
  LSR
  LSR
  LSR
  LSR
  TAY
  CPY #$00  
  BEQ .EXIT1
  CPY #$02                
  BEQ .CALL_MOVE_TANK1    ;button_a
  CPY #$01
  BEQ .CALL_TAKE_SHOT1    ;button_b
.CALL_MOVE_TANK1:
  LDY #$01
  STY TANK1_MOVING
  LDY #$00
  JSR MOVE_TANK1
  JMP .EXIT1
.CALL_TAKE_SHOT1:
  LDY BALL_MOVING1
  CPY #$01
  BEQ .KEEP_MOVING1
  JSR RELOAD1
  JSR TAKE_SHOT1
.KEEP_MOVING1:
  JSR MOVE_BALL1
  LDY BALL_MOVING1
  CPY #$00
  BNE .KEEP_MOVING1
  JMP .EXIT1
.EXIT1:
  JSR DRAWSPRITES
  RTI

EAST_WEST0: subroutine
  CMP #$01              
  BEQ .TURN_EAST0       
  JMP .TURN_WEST0
.TURN_EAST0:  
  LDA TDIR0
  CMP #$04
  BEQ .FNDR2
  CMP #$02     
  BNE .EAST_TEST_ZERO0
  LDA #$04
  STA TDIR0
  JSR FIND_DIRECTION0
  JMP .EXIT0
.FNDR2:
  JSR FIND_DIRECTION0
  JMP .EXIT0
.EAST_TEST_ZERO0:
  CMP #$00
  BNE .EAST_TEST_ONE0
  JMP .EAST_FILL_NE0
.EAST_TEST_ONE0:
  CMP #$01
  BNE .EAST_TEST_TWO0
  JMP .EAST_FILL_NE0
.EAST_FILL_NE0:
  LDA #$02
  STA TDIR0
  JSR FIND_DIRECTION0
  JMP .EXIT0
.EAST_TEST_TWO0:
  CMP #$02
  BNE .EAST_TEST_NW0
  LDA #$04
  STA TDIR0
  JSR FIND_DIRECTION0
  JMP .EXIT0
.EAST_TEST_NW0:
  CMP #$80
  BNE .EAST_SHIFT_LEFT0
  LDA #$00
  STA TDIR0
  JSR FIND_DIRECTION0
.EAST_SHIFT_LEFT0:
  LDA TDIR0
  CMP #$80     
  ROR      
  STA TDIR0
  JSR FIND_DIRECTION0
  JMP .EXIT0
.TURN_WEST0:
  LDA TDIR0
  CMP #$40
  BEQ .FDIR3
  CMP #$80     
  BNE .WEST_TEST_ZERO0
  LDA #$40
  STA TDIR0
.FDIR3:
  JSR FIND_DIRECTION0
  JMP .EXIT0
.WEST_TEST_ZERO0:
  CMP #$00
  BNE .WEST_TEST_ONE0
  JMP .WEST_FILL_NE0
.WEST_TEST_ONE0:
  CMP #$01
  BNE .WEST_TEST_TWO0
  JMP .WEST_FILL_NE0
.WEST_FILL_NE0:
  LDA #$80
  STA TDIR0
  JSR FIND_DIRECTION0
  JMP .EXIT0
.WEST_TEST_TWO0:
  CMP #$02
  BNE .WEST_SHIFT_LEFT0
  LDA #$00
  STA TDIR0
  JSR FIND_DIRECTION0
  JMP .EXIT0
.WEST_SHIFT_LEFT0:
  LDA TDIR0
  ASL
  STA TDIR0
  JSR FIND_DIRECTION0
  JMP .EXIT0
.EXIT0:
  RTS

FIND_DIRECTION0: subroutine
  LDA TDIR0
  JMP .TRY_NORTH0
.TRY_NORTH0:
  CMP #$00
  BNE .TRY_NE0
  JMP .FACE_NORTH0
.TRY_NE0:
  CMP #$02
  BNE .TRY_E0
  JMP .FACE_NE0
.TRY_E0:
  CMP #$04
  BNE .TRY_SE0
  JMP .FACE_EAST0
.TRY_SE0:
  CMP #$08
  BNE .TRY_SOUTH0
  JMP .FACE_SE0
.TRY_SOUTH0:
  CMP #$10
  BNE .TRY_SW0
  JMP .FACE_SOUTH0
.TRY_SW0:
  CMP #$20
  BNE .TRY_WEST0
  JMP .FACE_SW0
.TRY_WEST0
  CMP #$40
  BNE .TRY_NW0
  JMP .FACE_WEST0
.TRY_NW0
  CMP #$80
  BNE .TRY_NORTH0
  JMP .FACE_NW0
.FACE_NORTH0:
  LDA #$01
  STA INDEX0
  LDA #$00
  STA FLIPPED0
  LDA #$00
  STA TDIR0
  JMP .EXIT0
.FACE_NE0:
  LDA #$04
  STA INDEX0
  LDA #$40
  STA FLIPPED0
  LDA #$02
  STA TDIR0
  JMP .EXIT0
.FACE_EAST0:
  LDA #$00
  STA INDEX0
  LDA #$00
  STA FLIPPED0
  LDA #$04
  STA TDIR0
  JMP .EXIT0
.FACE_SE0:
  LDA #$03
  STA INDEX0
  LDA #$00
  STA FLIPPED0
  LDA #$08
  STA TDIR0
  JMP .EXIT0
.FACE_SOUTH0:
  LDA #$01
  STA INDEX0
  LDA #$80
  STA FLIPPED0
  LDA #$10
  STA TDIR0
  JMP .EXIT0
.FACE_SW0:
  LDA #$04
  STA INDEX0
  LDA #$80
  STA FLIPPED0
  LDA #$20
  STA TDIR0
  JMP .EXIT0
.FACE_WEST0:
  LDA #$00
  STA INDEX0
  LDA #$40
  STA FLIPPED0
  LDA #$40
  STA TDIR0
  JMP .EXIT0
.FACE_NW0:
  LDA #$04
  STA INDEX0
  LDA #$00
  STA FLIPPED0
  LDA #$80
  STA TDIR0
  JMP .EXIT0
.EXIT0:
  RTS

NORTH_SOUTH0: subroutine
  CMP #$01     
  BEQ .TURN_SOUTH0  
  JMP .TURN_NORTH0
.EXIT_NS0:
  JMP .EXIT0
.FIND:
  JSR FIND_DIRECTION0
  JMP .EXIT0
.TURN_NORTH0:
  LDA TDIR0
  CMP #$00
  BEQ .FDIR0
  CMP #$10
  BCS .NORTH_SHIFT_LEFT0
  JMP .NORTH_SHIFT_RIGHT0
.FDIR0:
  JSR FIND_DIRECTION0
  JMP .EXIT0
;6502 doesn't have ASR, Do:
;1.) CMP #$80
;2.) ROR
.NORTH_SHIFT_RIGHT0:
  LDA TDIR0
  CMP #$80     
  ROR      
  STA TDIR0
  CMP #$01
  BNE .FDIR1
  LDA #$00
  STA TDIR0  
.NORTH_SHIFT_LEFT0:
  LDA TDIR0
  ASL
  STA TDIR0
  JMP .FDIR1
.FDIR1:
  JSR FIND_DIRECTION0
  JMP .EXIT0
.TURN_SOUTH0:
  LDA TDIR0
  CMP #$10
  BEQ .FIND_DIRECTION_SOUTH0
  STA TDIR0
  JMP .SOUTH_TEST_ZERO0
.SOUTH_TEST_ZERO0:
  CMP #$00
  BNE .SOUTH_TEST_ONE0
  JMP .SOUTH_FILL_NE0
.SOUTH_TEST_ONE0:
  CMP #$01
  BEQ .SOUTH_FILL_NE0
.SOUTH_TEST_HEX_800:
  LDA TDIR0
  CMP #$80
  BNE .TEST_REST0
  LDA #$40
  STA TDIR0
  JMP .FIND_DIRECTION_SOUTH0
.SOUTH_FILL_NE0:
  LDA #$02
  STA TDIR0
  JMP .FIND_DIRECTION_SOUTH0
.TEST_REST0:
  LDA TDIR0
  CMP #$10
  BCS .SOUTH_SHIFT_RIGHT0
  JMP .SOUTH_SHIFT_LEFT0
.SOUTH_SHIFT_RIGHT0:
  LDA TDIR0
  CMP #$80     
  ROR      
  STA TDIR0
  JSR FIND_DIRECTION0
  JMP .EXIT0
.SOUTH_SHIFT_LEFT0:
  LDA TDIR0
  ASL
  STA TDIR0
  JSR FIND_DIRECTION0
  JMP .EXIT0
.FIND_DIRECTION_SOUTH0:
  JSR FIND_DIRECTION0
.EXIT0:
  RTS

TAKE_SHOT0: subroutine
  JSR GUN_NOISE
  LDX #$01
  CPX BALL_MOVING0
  JSR TURNONBALL0
  LDX TDIR0
  STX BDIR0
  RTS

MOVE_BALL0: subroutine
  JSR DRAWBALL0
  LDX BDIR0
  CPX #$00
  BEQ .N_BALL0
  CPX #$02
  BEQ .NE_BALL0
  CPX #$04
  BEQ .E_BALL0
  CPX #$08
  BEQ .SE_BALL0
  CPX #$10
  BEQ .S_BALL0
  CPX #$20
  BEQ .SW_BALL0
  CPX #$40
  BEQ .W_BALL0
  CPX #$80
  BEQ .NW_BALL0
.N_BALL0:
  JMP .N_MBALL0
.NE_BALL0:
  JMP .NE_MBALL0
.E_BALL0:
  JMP .E_MBALL0
.SE_BALL0:
  JMP .SE_MBALL0
.S_BALL0:
  JMP .S_MBALL0
.SW_BALL0:
  JMP .SW_MBALL0
.W_BALL0:
  JMP .W_MBALL0
.NW_BALL0:
  JMP .NW_MBALL0
.N_MBALL0
  DEC Y2
  DEC Y2
  JMP .DRAW0
.NE_MBALL0:
  DEC Y2
  INC X2
  JMP .DRAW0
.E_MBALL0:
  INC X2
  INC X2
  JMP .DRAW0
.SE_MBALL0:
  INC Y2
  INC X2
  JMP .DRAW0
.S_MBALL0:
  INC Y2
  INC Y2
  JMP .DRAW0
.SW_MBALL0:
  INC Y2
  DEC X2
  JMP .DRAW0
.W_MBALL0:
  DEC X2
  DEC X2
  JMP .DRAW0
.NW_MBALL0:
  DEC Y2
  DEC X2
  JMP .DRAW0
.EXIT_BALL0_B2:
  JSR TURNOFFBALL0
  JMP .EXIT_BALL0
.EXIT_BALL0_B1:
  JSR TURNOFFBALL0
  JMP .EXIT_BALL0
.DRAW0:
  JSR DRAWBALL0
  LDX BDIR0
  CPX #$00
  BEQ .NBALL0   
  CPX #$02  
  BEQ .NEBALL0 
  CPX #$04
  BEQ .EBALL0
  CPX #$08
  BEQ .SEBALL0
  CPX #$10
  BEQ .SBALL0
  CPX #$20
  BEQ .SWBALL0
  CPX #$40 
  BEQ .WBALL0
  CPX #$80
  BEQ .NWBALL0
  JMP .EXIT_TEST0
.NBALL0
  JMP .NB0
.NEBALL0:
  JMP .NEB0
.EBALL0:
  JMP .EB0
.SEBALL0:
  JMP .SEB0
.SBALL0:
  JMP .SB0
.SWBALL0:
  JMP .SWB0
.WBALL0:
  JMP .WB0
.NWBALL0:
  JMP .NWB0
.NB0:
  JSR TANK1_HIT
  LDX TANK_HIT
  CPX #$01
  BEQ .EXIT_NB0
  LDX X2
  CPX #$CF
  BCS .NORTH_TWB0
  CPX #$A9
  BCS .NORTH_TYB0
  CPX #$8E
  BCS .NORTH_TWB0
  CPX #$69
  BCS .NORTH_TYB0
  CPX #$4D
  BCS .NORTH_TWB0
  CPX #$2B
  BCS .NORTH_TYB0
  JMP .NORTH_TWB0
.NORTH_TYB0:
  LDX Y2
  CPX #$C0      
  BCS .NORTH_TWB0
  CPX #$A4      
  BCS .EXIT_NB0
  CPX #$50    
  BCS .NORTH_TWB0
  CPX #$30
  BCS .EXIT_NB0
  JMP .NORTH_TWB0
.NORTH_TWB0:
  LDX #$06
  CPX Y2
  BCS .EXIT_NB0
.NORTH_TDB0:
  JMP .EXIT_TEST0
.EXIT_NB0
  JMP .EXIT0
.NEB0:
  JSR TANK1_HIT
  LDX TANK_HIT
  CPX #$01
  BNE .NEB0A
  JMP .EXIT0
.NEB0A:
  JSR NORTH_EB0
  CMP #$00
  BEQ .EXIT_TEST0_CALL
  JMP .EXIT0
.EXIT_TEST0_CALL:
  JMP .EXIT_TEST0
.SEB0:
  JSR TANK1_HIT
  LDX TANK_HIT
  CPX #$01
  BNE .SEB0A
  JMP .EXIT0
.SEB0A:
  JSR SOUTH_EB0
  CMP #$00
  BEQ .EXIT_TEST0_SE
  JMP .EXIT0
.EXIT_TEST0_SE:
  JMP .EXIT_TEST0
.SWB0:
  JSR TANK1_HIT
  LDX TANK_HIT
  CPX #$01
  BNE .SWB0A
  JMP .EXIT0
.SWB0A:
  JSR SOUTH_WEST_BALL0
  CMP #$00
  BEQ .EXITB0SW
  JMP .EXIT0
.EXITB0SW:
  JMP .EXIT_TEST0
.NWB0:
  JSR TANK1_HIT
  LDX TANK_HIT
  CPX #$01
  BNE .NWB0A
  JMP .EXIT0
.NWB0A:
  JSR NORTH_WEST_BALL0
  CMP #$00
  BEQ .EXIT_TEST0_CALL0
  JMP .EXIT0
.EXIT_TEST0_CALL0:
  JMP .EXIT_TEST0
.SB0:
  JSR TANK1_HIT
  LDX TANK_HIT
  CPX #$01
  BEQ .EXIT_SB0B
  LDX X2
  CPX #$CF
  BCS .SOUTH_TWB0
  CPX #$A9
  BCS .SOUTH_TYB0
  CPX #$8E
  BCS .SOUTH_TWB0
  CPX #$69
  BCS .SOUTH_TYB0
  CPX #$4D
  BCS .SOUTH_TWB0
  CPX #$2B
  BCS .SOUTH_TYB0
  JMP .SOUTH_TWB0
.SOUTH_TYB0:
  LDX Y2
  CPX #$C0      
  BCS .SOUTH_TWB0
  CPX #$A4      
  BCS .EXIT_SB0B
  CPX #$68    
  BCS .SOUTH_TWB0
  CPX #$60   
  BCS .EXIT_SB0B
  CPX #$40   
  BCS .EXIT_SB0B
  CPX #$32   
  BCS .EXIT_SB0B
  JMP .SOUTH_TWB0
.SOUTH_TWB0:
  LDX Y2
  CPX #$D6
  BCS .EXIT_SB0B
.SOUTH_TDB0:
  JMP .EXIT_TEST0
.EXIT_SB0B
  JMP .EXIT0
.WB0:
  JSR TANK1_HIT
  LDX TANK_HIT
  CPX #$01
  BEQ .EXIT_WEST_B0
  LDX Y2
  CPX #$C2
  BCS .WEST_TWB0
  CPX #$8A
  BCS .WEST_TXB0
  CPX #$5D
  BCS .WEST_TWB0
  CPX #$2A
  BCS .WEST_TXB0
  JMP .WEST_TWB0
.WEST_TXB0:
  LDX X2
  CPX #$D0      
  BCS .WEST_TWB0
  CPX #$BE      
  BCS .EXIT_WEST_B0
  CPX #$8F    
  BCS .WEST_TWB0
  CPX #$80   
  BCS .EXIT_WEST_B0
  CPX #$50   
  BCS .WEST_TWB0
  CPX #$39   
  BCS .EXIT_WEST_B0
  JMP .WEST_TWB0
.WEST_TWB0:
  LDX #$04
  CPX X2
  BCS .EXIT_WEST_B0
.WEST_TDB0:
  JMP .EXIT_TEST0
.EXIT_WEST_B0
  JMP .EXIT0
.EB0:
  JSR TANK1_HIT
  LDX TANK_HIT
  CPX #$01
  BEQ .EXIT_EB0
  LDX Y2
  CPX #$BD
  BCS .EAST_TWB0
  CPX #$8A
  BCS .EAST_TXB0
  CPX #$5D
  BCS .EAST_TWB0
  CPX #$2A
  BCS .EAST_TXB0
  JMP .EAST_TWB0
.EAST_TXB0:
  LDX X2
  CPX #$D0   
  BCS .EAST_TWB0
  CPX #$BE   
  BCS .EXIT_EB0
  CPX #$8F   
  BCS .EAST_TWB0
  CPX #$80   
  BCS .EXIT_EB0
  CPX #$50   
  BCS .EAST_TWB0
  CPX #$39   
  BCS .EXIT_EB0
  JMP .EAST_TWB0
.EAST_TWB0:
  LDX X2
  CPX #$F8
  BCS .EXIT_EB0
.EAST_TDB0:
  JMP .EXIT_TEST0
.EXIT_EB0
  JMP .EXIT0
.EXIT_TEST0:  
  RTS
.EXIT_BALL0:
  RTS
.EXIT0:
  JSR TURNOFFBALL0
  RTS

EAST_BALL0: subroutine
  JSR TANK1_HIT
  LDX TANK_HIT
  CPX #$01
  BEQ .EXIT_EB0
  LDX Y2
  CPX #$C2
  BCS .EAST_TDB0
  LDX Y2
  CPX #$8A
  BCS .EAST_TXB0
  LDX Y2
  CPX #$5D
  BCS .EAST_TDB0
  LDX Y2
  CPX #$2A
  BCS .EAST_TXB0
  JMP .EAST_TDB0
.EAST_TXB0:
  LDX X2
  CPX #$D0   
  BCS .EAST_TDB0
  LDX X2
  CPX #$BE   
  BCS .EXIT_EB0
  LDX X2
  CPX #$8F   
  BCS .EAST_TDB0
  LDX X2
  CPX #$80   
  BCS .EXIT_EB0
  LDX X2
  CPX #$50   
  BCS .EAST_TDB0
  LDX X2
  CPX #$39   
  BCS .EXIT_EB0
  JMP .EAST_TDB0
.EAST_TDB0:
  LDA Y2
  CMP #$D5
  BCS .EXIT_EB0
.DO_SE:
  LDA X2
  CMP #$F8
  BCS .EXIT_EB0
  LDX #$00
  JMP .EXIT0
.EXIT_EB0
  LDX #$01
  JMP .EXIT0
.EXIT0
  TXA
  RTS

NORTH_EB0: subroutine
  JSR TANK1_HIT
  LDX TANK_HIT
  CPX #$01
  BEQ .EXIT_NB0
  LDX X2
  CPX #$CE   
  BCS .NORTH_TDB0
  LDX X2
  CPX #$B8   
  BCS .NORTH_TYB0
  LDX X2
  CPX #$8E   
  BCS .NORTH_TDB0
  LDX X2
  CPX #$6E   
  BCS .NORTH_TYB0
  LDX X2
  CPX #$4E   
  BCS .NORTH_TDB0
  LDX X2
  CPX #$36   
  BCS .NORTH_TYB0
  JMP .NORTH_TDB0
.NORTH_TYB0:
  LDX Y2
  CPX #$C0      
  BCS .NORTH_TDB0
  LDX Y2
  CPX #$8B     
  BCS .EXIT_NB0
  LDX Y2
  CPX #$50    
  BCS .NORTH_TDB0
  LDX Y2
  CPX #$2E
  BCS .EXIT_NB0
.NORTH_TDB0:
  LDA #$04
  CMP Y2
  BCS .EXIT_NB0
.DO_NW:
  LDA #$04
  CMP X2
  BCS .EXIT_NB0
  LDA #$00
  JMP .EXIT0
.DO_NE:
  LDA X2
  CMP #$F8
  BCS .EXIT_NB0
  LDA #$00
  JMP .EXIT0
.EXIT_NB0
  LDA #$01
  JMP .EXIT0
.EXIT0
  RTS

NORTH_WEST_BALL0: subroutine
  JSR TANK1_HIT
  LDX TANK_HIT
  CPX #$01
  BEQ .EXIT_NB0
  LDX X2
  CPX #$D0   
  BCS .NORTH_TDB0
  LDX X2
  CPX #$A6   
  BCS .NORTH_TYB0
  LDX X2
  CPX #$92   
  BCS .NORTH_TDB0
  LDX X2
  CPX #$66   
  BCS .NORTH_TYB0
  LDX X2
  CPX #$50   
  BCS .NORTH_TDB0
  LDX X2
  CPX #$27   
  BCS .NORTH_TYB0
  JMP .NORTH_TDB0
.NORTH_TYB0:
  LDX Y2
  CPX #$BC      
  BCS .NORTH_TDB0
  LDX Y2
  CPX #$90     
  BCS .EXIT_NB0
  LDX Y2
  CPX #$50    
  BCS .NORTH_TDB0
  LDX Y2
  CPX #$2E
  BCS .EXIT_NB0
.NORTH_TDB0:
  LDA #$04
  CMP Y2
  BCS .EXIT_NB0
.DO_NW:
  LDA #$04
  CMP X2
  BCS .EXIT_NB0
  LDA #$00
  JMP .EXIT0
.EXIT_NB0
  LDA #$01
  JMP .EXIT0
.EXIT0
  RTS

SOUTH_EB0: subroutine
  JSR TANK1_HIT
  LDX TANK_HIT
  CPX #$01
  BEQ .EXIT_SB0B
  LDX X2
  CPX #$CF
  BCS .SOUTH_TWB0
  LDX X2
  CPX #$A9
  BCS .SOUTH_TYB0
  LDX X2
  CPX #$8E
  BCS .SOUTH_TWB0
  LDX X2
  CPX #$69
  BCS .SOUTH_TYB0
  LDX X2
  CPX #$4D
  BCS .SOUTH_TWB0
  LDX X2
  CPX #$2B
  BCS .SOUTH_TYB0
  JMP .SOUTH_TWB0
.EXIT_SB0B:
  JMP .EXIT_SB0
.SOUTH_TYB0:
  LDX Y2
  CPX #$B0      
  BCS .SOUTH_TWB0
  CPX #$90      
  BCS .EXIT_SB0
  CPX #$60
  BCS .SOUTH_TWB0   
  CPX #$40   
  BCS .EXIT_SB0
  CPX #$32   
  BCS .EXIT_SB0
  JMP .SOUTH_TWB0
.SOUTH_TWB0:
  LDX Y2
  CPX #$D5
  BCS .EXIT_SB0
.SOUTH_TDB0:
  LDX Y2
  CPX #$D6
  BCS .EXIT_SB0
.DO_SE:
  LDX X2
  CPX #$F8
  BCS .EXIT_SB0
  LDA #$00
  JMP .EXIT0
.EXIT_SB0
  LDA #$01
  JMP .EXIT0
.EXIT0
  RTS

;sw uses the se test.
SOUTH_WEST_BALL0: subroutine
  JSR TANK1_HIT
  LDX TANK_HIT
  CPX #$01
  BEQ .EXIT_SB0B
  LDX X2
  CPX #$CF
  BCS .SOUTH_TWB0
  LDX X2
  CPX #$A9
  BCS .SOUTH_TYB0
  LDX X2
  CPX #$8E
  BCS .SOUTH_TWB0
  LDX X2
  CPX #$69
  BCS .SOUTH_TYB0
  LDX X2
  CPX #$4B
  BCS .SOUTH_TWB0
  LDX X2
  CPX #$2B
  BCS .SOUTH_TYB0
  JMP .SOUTH_TWB0
.EXIT_SB0B:
  JMP .EXIT_SB0
.SOUTH_TYB0:
  LDX Y2
  CPX #$B5      
  BCS .SOUTH_TWB0
  CPX #$90      
  BCS .EXIT_SB0
  CPX #$5A
  BCS .SOUTH_TWB0   
  CPX #$40   
  BCS .EXIT_SB0
  CPX #$32   
  BCS .EXIT_SB0
  JMP .SOUTH_TWB0
.SOUTH_TWB0:
  LDX Y2
  CPX #$D5
  BCS .EXIT_SB0
.SOUTH_TDB0:
  LDX Y2
  CPX #$D6
  BCS .EXIT_SB0
.DO_SE:
  LDX X2
  CPX #$F8
  BCS .EXIT_SB0
  LDA #$00
  JMP .EXIT0
.EXIT_SB0
  LDA #$01
  JMP .EXIT0
.EXIT0
  RTS

MOVE_TANK0: subroutine
  LDX TDIR0
  CPX #$00
  BEQ .NORTH
  CPX #$02
  BEQ .NEAST
  CPX #$04
  BEQ .EAST
  CPX #$08
  BEQ .SEAST
  CPX #$10
  BEQ .SOUTH
  CPX #$20
  BEQ .SWEST
  CPX #$40
  BEQ .WEST
  CPX #$80
  BEQ .NWEST
  JMP .EXIT0
.NORTH:
  JMP .N1
.NEAST:
  JMP .NE1
.EAST:
  JMP .E1
.SEAST:
  JMP .SE1
.SOUTH:
  JMP .S1
.SWEST:
  JMP .SW1
.WEST:
  JMP .W1
.NWEST:
  JMP .NW1
.N1:
  JSR TEST_NORTH0
  CMP #$01
  BEQ .N_MOVE
  JMP .N_NO_MOVE
.N_MOVE:
  DEC Y1
  DEC Y1
  DEC Y1
  DEC Y1
.N_NO_MOVE:
  LDA BALL_MOVING0
  CMP #$01
  BEQ .N_EXIT
  JSR TURNOFFBALL0
.N_EXIT:
  JMP .EXIT0
.NE1:
  JSR TEST_NORTH0
  CMP #$01
  BEQ .NE_EAST
  JMP .NE_NO_MOVE
.NE_EAST
  JSR TEST_EAST0
  CMP #$01
  BEQ .NE_MOVE
  JMP .NE_NO_MOVE
.NE_MOVE:
  DEC Y1
  INC X1
  DEC Y1
  INC X1
.NE_NO_MOVE:
  LDA BALL_MOVING0
  CMP #$01
  BEQ .NE_EXIT
  JSR TURNOFFBALL0
.NE_EXIT:
  JMP .EXIT0
.E1:
  JSR TEST_EAST0
  CMP #$01
  BEQ .E_MOVE
  JMP .E_NO_MOVE
.E_MOVE:
  INC X1
  INC X1
  INC X1
  INC X1
.E_NO_MOVE:
  LDA BALL_MOVING0
  CMP #$01
  BEQ .E_EXIT
  JSR TURNOFFBALL0
.E_EXIT:
  JMP .EXIT0
.SE1:
  JSR TEST_SOUTH0
  CMP #$01
  BEQ .SE_EAST
  JMP .SE_NO_MOVE
.SE_EAST
  JSR TEST_EAST0
  CMP #$01
  BEQ .SE_MOVE
  JMP .SE_NO_MOVE
.SE_MOVE:
  INC Y1
  INC X1
  INC Y1
  INC X1
.SE_NO_MOVE:
  LDA BALL_MOVING0
  CMP #$01
  BEQ .SE_EXIT
  JSR TURNOFFBALL0
.SE_EXIT:
  JMP .EXIT0
.S1:
  JSR TEST_SOUTH0
  CMP #$01
  BEQ .S_MOVE
  JMP .S_NO_MOVE
.S_MOVE:
  INC Y1
  INC Y1
  INC Y1
  INC Y1
.S_NO_MOVE:
  LDA BALL_MOVING0
  CMP #$01
  BEQ .S_EXIT
  JSR TURNOFFBALL0
.S_EXIT:
  JMP .EXIT0
.SW1:
  JSR TEST_SOUTH0
  CMP #$01
  BEQ .SW_WEST
  JMP .SW_NO_MOVE
.SW_WEST
  JSR TEST_WEST0
  CMP #$01
  BEQ .SW_MOVE
  JMP .SW_NO_MOVE
.SW_MOVE:
  INC Y1
  DEC X1
  INC Y1
  DEC X1
.SW_NO_MOVE:
  LDA BALL_MOVING0
  CMP #$01
  BEQ .SW_EXIT
  JSR TURNOFFBALL0
.SW_EXIT:
  JMP .EXIT0
.W1:
  JSR TEST_WEST0
  CMP #$01
  BEQ .W_MOVE
  JMP .W_NO_MOVE
.W_MOVE:
  DEC X1
  DEC X1
  DEC X1
  DEC X1
.W_NO_MOVE:
  LDA BALL_MOVING0
  CMP #$01
  BEQ .W_EXIT
  JSR TURNOFFBALL0
.W_EXIT:
  JMP .EXIT0
.NW1:
  JSR TEST_NORTH0
  CMP #$01
  BEQ .NW_WEST
  JMP .NW_NO_MOVE
.NW_WEST
  JSR TEST_WEST0
  CMP #$01
  BEQ .NW_MOVE
  JMP .NW_NO_MOVE
.NW_MOVE:
  DEC Y1
  DEC X1
  DEC Y1
  DEC X1
.NW_NO_MOVE:
  LDA BALL_MOVING0
  CMP #$01
  BEQ .NW_EXIT
  JSR TURNOFFBALL0
.NW_EXIT:
  JMP .EXIT0
.EXIT0:
  RTS

TEST_NORTH0: subroutine
  LDX X1
  CPX #$D0
  BCS .N_WALL
  CPX #$A5
  BCS .N4
  CPX #$90
  BCS .N_WALL
  CPX #$68
  BCS .N4
  CPX #$50
  BCS .N_WALL
  CPX #$27
  BCS .N4
  JMP .N_WALL
.N4:
  JSR NORTH_COLLISION0
  CMP #$01
  BEQ .N_NO_MOVE
.N_WALL:
  LDX Y1
  CPX #$12
  BEQ .N_NO_MOVE
  CPX #$11
  BEQ .N_NO_MOVE
  CPX #$10
  BEQ .N_NO_MOVE
  CPX #$0F
  BEQ .N_NO_MOVE
.N_MOVE:
  LDA #$01
  JMP .EXIT
.N_NO_MOVE:
  LDA #$00
.EXIT:
  RTS

TEST_SOUTH0: subroutine
  LDX X1
  CPX #$D0
  BCS .S_WALL
  CPX #$A5
  BCS .S2
  CPX #$90
  BCS .S_WALL
  CPX #$68
  BCS .S2
  CPX #$50
  BCS .S_WALL
  CPX #$27
  BCS .S2
  JMP .S_WALL
.S2:
  JSR SOUTH_COLLISION0
  CMP #$01
  BEQ .S_NO_MOVE
  JMP .S_WALL
.S3:
  LDX X1
  CPX #$90
  BCS .S_WALL  
  CPX #$70
  BCS .S4
  CPX #$52
  BCS .S_WALL
  CPX #$27
  BCS .S4
  JMP .S_WALL
.S4:
  JSR SOUTH_COLLISION0
  CMP #$01
  BEQ .S_NO_MOVE
  JMP .S_MOVE
.S_WALL:
  LDX Y1
  CPX #$D4
  BEQ .S_NO_MOVE
  CPX #$D5
  BEQ .S_NO_MOVE
  CPX #$D6
  BEQ .S_NO_MOVE
  CPX #$D7
  BEQ .S_NO_MOVE
.S_MOVE:
  LDA #$01
  JMP .EXIT
.S_NO_MOVE:
  LDA #$00
.EXIT:
  RTS

TEST_EAST0: subroutine
  LDX Y1
  CPX #$C0
  BCS .E_WALL
.E2:
  CPX #$86
  BCS .E3
  JMP .E4
.E3:
  JSR EAST_COLLISION0
  CMP #$01
  BEQ .ENM1
  JMP .E_MOVE
.ENM1:
  JMP .E_NO_MOVE
.E4:
  LDX Y1
  BCS .E_WALL
  CPX #$60
  BCS .E_WALL
  JMP .E5
.E5:
  LDX Y1
  CPX #$26
  BCS .E6
  JMP .E_WALL
.E6:
  JSR EAST_COLLISION0
  CMP #$01
  BEQ .E_NO_MOVE
  JMP .E_MOVE
.E_WALL:
  LDX X1
  CPX #$ED
  BEQ .E_NO_MOVE
  CPX #$EE
  BEQ .E_NO_MOVE
  CPX #$EF
  BEQ .E_NO_MOVE
  CPX #$F0
  BEQ .E_NO_MOVE
.E_MOVE:
  LDA #$01
  JMP .EXIT
.E_NO_MOVE:
  LDA #$00
.EXIT:
  RTS

TEST_WEST0: subroutine
  LDX Y1
  CPX #$C0
  BCS .W_WALL
.W2:
  LDX Y1
  CPX #$86
  BCS .W3
  JMP .W4
.W3:
  JSR WEST_COLLISION0
  CMP #$01
  BEQ .WNM
  JMP .W4
.WNM:
  JMP .W_NO_MOVE
.W4:
  LDX Y1
  CPX #$60
  BCS .W_WALL
  JMP .W5
.W5:
  LDX Y1
  CPX #$27
  BCS .W6
  JMP .W_WALL
.W6:
  JSR WEST_COLLISION0
  CMP #$01
  BEQ .W_NO_MOVE
.W_WALL:
  LDX X1
  CPX #$0B
  BEQ .W_NO_MOVE
  CPX #$0A
  BEQ .W_NO_MOVE
  CPX #$09
  BEQ .W_NO_MOVE
  CPX #$08
  BEQ .W_NO_MOVE
  JMP .W_MOVE
.W_MOVE:
  LDA #$01
  JMP .EXIT
.W_NO_MOVE:
  LDA #$00
.EXIT:
  RTS

EAST_COLLISION0: subroutine  
.FG_JK:
  LDX X1
  CPX #$EB
  BCS .COLL
.EH_IL:
  CPX #$A6
  BEQ .COLL
  CPX #$A7
  BEQ .COLL
  CPX #$A8
  BEQ .COLL
.BC_NO:
  CPX #$66
  BEQ .COLL
  CPX #$67
  BEQ .COLL
  CPX #$68
  BEQ .COLL
.XX_ZZ:
  CPX #$26
  BEQ .COLL
  CPX #$27
  BEQ .COLL
  CPX #$28
  BEQ .COLL
  CPX #$29
  BEQ .COLL
  CPX #$2A
  BEQ .COLL
  JMP .NO_COLL
.COLL:
  LDA #$01
  JMP .EXIT
.NO_COLL:
  LDA #$00
.EXIT
  RTS

WEST_COLLISION0: subroutine  
.AC1_MP1:
  LDX X1
  CPX #$0A
  BEQ .COLL
  LDX X1
  CPX #$09
  BEQ .COLL  
  LDX X1
  CPX #$08
  BEQ .COLL  
.AC_MP:
  LDX X1
  CPX #$52
  BEQ .COLL
  LDX X1
  CPX #$51
  BEQ .COLL  
  LDX X1
  CPX #$50
  BEQ .COLL  
.EH_IL:
  LDX X1
  CPX #$92
  BEQ .COLL
  LDX X1
  CPX #$91
  BEQ .COLL
  LDX X1
  CPX #$90
  BEQ .COLL
.NN_BB:
  LDX X1
  CPX #$70
  BEQ .COLL
  LDX X1
  CPX #$6F
  BEQ .COLL
  LDX X1
  CPX #$6E
  BEQ .COLL
.FG_JK:
  LDX X1
  CPX #$D2
  BEQ .COLL
  CPX #$D1
  BEQ .COLL
  LDX X1
  CPX #$D0
  BEQ .COLL
  JMP .NO_COLL
.COLL:
  LDA #$01
  JMP .EXIT
.NO_COLL:
  LDA #$00
.EXIT
  RTS

NORTH_COLLISION0: subroutine  
.FG_JK:
  LDX Y1
  CPX #$C0
  BEQ .COLL
  CPX #$BF
  BEQ .COLL
  CPX #$BE
  BEQ .COLL
.EH_IL:
  CPX #$60
  BEQ .COLL
  CPX #$5F
  BEQ .COLL
  CPX #$5E
  BEQ .COLL
.N_WALL:
  CPX #$12
  BEQ .COLL
  CPX #$11
  BEQ .COLL
  CPX #$10
  BEQ .COLL
  CPX #$0A
  BEQ .COLL
  JMP .NO_COLL
.COLL:
  LDA #$01
  JMP .EXIT
.NO_COLL:
  LDA #$00
.EXIT
  RTS

SOUTH_COLLISION0: subroutine  
.FG_JK:
  LDX Y1
  CPX #$26
  BEQ .COLL
  CPX #$27
  BEQ .COLL
  CPX #$28
  BEQ .COLL
.EH_IL:
  CPX #$84
  BEQ .COLL
  CPX #$85
  BEQ .COLL
  CPX #$86
  BEQ .COLL
.S_WALL:
  CPX #$D4
  BEQ .COLL
  CPX #$D5
  BEQ .COLL
  CPX #$D6
  BEQ .COLL
  CPX #$D7
  BEQ .COLL
  JMP .NO_COLL
.COLL:
  LDA #$01
  JMP .EXIT
.NO_COLL:
  LDA #$00
.EXIT
  RTS

TANK1_HIT: subroutine
  LDX BDIR0
  CPX $00
  BEQ .CHECK_NORTH0
  CPX #$04
  BEQ .CHECK_EAST0
  CPX #$10
  BEQ .CHECK_SOUTH0
  CPX #$40
  BEQ .CHECK_WEST0
  JMP .CHECK_ANGLE0
.CHECK_WEST0:
  JMP .WEST0
.CHECK_NORTH0:
  LDX Y3
  CPX Y1
  BCS .EB
  LDX Y3
  CPX Y2
  BCS .CHECK_X_N_BR0
  JMP .EXIT0
.CHECK_X_N_BR0
  JMP .CHECK_X_NORTH0
.CHECK_EAST0:
  LDX X1
  CPX X3
  BCS .EXIT_BR0
  LDX X2   
  CPX X3   
  BCS .CHECK_Y_BR0     
  JMP .EXIT0     
.CHECK_SOUTH0:
  LDX Y1
  CPX Y3
  BCS .EB
  LDX Y2  
  CPX Y3  
  BCS .CHECK_X_S_BR0  
  JMP .EB
.CHECK_X_S_BR0:
  JMP .CHECK_X_SOUTH0
.EB:
  JMP .EXIT0     
.WEST0:
  LDX X3
  CPX X1
  BCS .EXIT_BR0
  LDX X3   
  CPX X2   
  BCS .CHECK_Y_BR0
  JMP .EXIT0
.CHECK_Y_BR0
  JMP .CHECK_Y0
  JMP .EXIT0     
.EXIT_BR0:
  JMP .EXIT0     
.CHECK_ANGLE0:
  LDY Y3
  LDX X3
  LDA X3
  DEX
  DEX
  DEX
  DEX
  DEX
  DEX
  DEX
  DEX
  CLC
  ADC #$08  
  CPY Y2
  BNE .EXIT0
  CPX X2
  BCS .EXIT0
  CMP X2
  BCS .TANK1_HIT_BR0
  JMP .EXIT0
.TANK1_HIT_BR0:
  JMP .TANK1_HIT
  JMP .EXIT0
.CHECK_Y0:
  LDA Y3
  SEC      
  SBC #$05     
  CMP Y2
  BCS .EXIT0    
  CLC      
  ADC #$09     
  CMP Y2
  BCS .TANK1_HIT
  JMP .EXIT0    
.EXIT0:
  RTS
.CHECK_X_SOUTH0:
  LDA X3
  SEC
  SBC #$04      
  CMP X2
  BCS .EXIT0
  CLC      
  ADC #$09
  CMP X2
  BCS .TANK1_HIT
  JMP .EXIT0    
.CHECK_X_NORTH0:
  LDA X3
  SEC
  SBC #$04
  CMP X2
  BCS .EXIT0
  CLC      
  ADC #$09    
  CMP X2
  BCS .TANK1_HIT
  JMP .EXIT0        
.TANK1_HIT:
  LDX TANK_HIT
  CPX #$01
  BEQ .EXIT0  
  LDX #$01
  STX TANK_HIT
  INC $C0
  JSR DISP_SCORE
  JSR MARK_X_ON_TANK1
  JSR TURNOFFBALL0
  JSR TURNOFFBALL1
  JMP .EXIT0

MARK_X_ON_TANK1: subroutine
  LDX #$00
  STX T3
  LDX #$95     
  STX T3
  RTS

;display score
DISP_SCORE: subroutine
  LDX $C0
  LDA SCORE_TBL,X
  STA T5
  LDA #$18
  STA Y5
  LDA #$70
  STA X5
  LDA #$00
  STA A5

  LDX $C1
  LDA SCORE_TBL,X
  STA T6
  LDA #$18
  STA Y6
  LDA #$90
  STA X6
  LDA #$00
  STA A6

  LDA #$42
  STA T7
  LDA #$18
  STA Y7
  LDA #$68
  STA X7
  LDA #$00
  STA A7

  LDA #$52
  STA T8
  LDA #$18
  STA Y8
  LDA #$88
  STA X8
  LDA #$00
  STA A8

  RTS

DRAWSPRITES: subroutine
  LDY TANK_HIT
  CPY #$01
  BEQ .EXIT_NODRAW
  LDX TANK_HIT
  CPX #$01
  BEQ .EXIT_NODRAW
  LDX INDEX0
  LDA TILES_TBL,X  
  TAX
  STX T1
  LDX INDEX1
  LDA TILES_TBL,X
  TAY
  STY T3   
  LDA FLIPPED0
  STA A1   
  LDA FLIPPED1
  STA A3
  ORA #02
  TAY
  STY A3   
  LDX $A4
  STX T2
  STX T4
  LDA #$80
  STA T5
  LDA #$18
  STA Y5
  LDA #50
  STA X5
  LDA #$80
  STA T6
  LDA #$18
  STA Y6
  LDA #$80
  STA X6
  LDA #$20
  STA A5
  STA A6
  JMP .EXIT_DRAW
.EXIT_NODRAW:
  LDA #$01
  STA TANK_HIT
.EXIT_DRAW:
  RTS

;longer sleep than ball1
;shoots faster. not sure why.
DRAWBALL0: subroutine
  SLEEP 2000
  LDX #$A4
  STX T2
  RTS

TURNOFFBALL0: subroutine
  LDX #$00
  STX T2   
  LDX #$00
  STX BALL_MOVING0
  JSR SILENCE_NOISE
  RTS

TURNONBALL0: subroutine
  LDX #$00
  STX TANK0_MOVING
  LDX #$A4
  STX T2   
  LDX #$01
  STX BALL_MOVING0
  RTS

RELOAD0: subroutine
  LDX #$00
  STX T2               
  LDX X1
  STX X2
  LDX Y1
  STX Y2
  LDX #$00 
  STX BALL_MOVING0
  RTS

INIT_PLAY: subroutine
  LDA #$00            ;global variables
  STA LAST_BUTTON0
  STA LAST_BUTTON1
  LDA #$00
  STA BALL_MOVING0
  STA BALL_MOVING1 
  LDA #$00
  STA TANK0_MOVING
  STA TANK1_MOVING
  LDA #$00
  STA TANK_HIT
  LDX #$04
  STX TDIR0
  STX BDIR0
  LDY #$40
  STY TDIR1
  STY BDIR1
  LDA #$00
  STA INDEX0
  STA INDEX1
  STA FLIPPED0
  LDA #$42    
  STA FLIPPED1
  RTS
  
;sprites
LOAD_SPRITES: subroutine
  LDX #$00              
LS:
  LDA SPRITES_TBL,X  
  STA SPRITES,X       ; store into RAM address ($0200 + x)
  INX                  
  CPX #$20             
  BNE LS                
  RTS

;All subroutines that end in a "1" belong to tank1 and ball1. They should be identical to
;subroutines that end in a "0" that belong to tank0 and ball0. Subroutines that don't
;end in either a "0" or a "1" belong to the application overall.

FIND_DIRECTION1: subroutine
  LDY TDIR1
  JMP .TRY_NORTH1
.TRY_NORTH1:
  CPY #$00
  BNE .TRY_NE1
  JMP .FACE_NORTH1
.TRY_NE1:
  CPY #$02
  BNE .TRY_E1
  JMP .FACE_NE1
.TRY_E1:
  CPY #$04
  BNE .TRY_SE1
  JMP .FACE_EAST1
.TRY_SE1:
  CPY #$08
  BNE .TRY_SOUTH1
  JMP .FACE_SE1
.TRY_SOUTH1:
  CPY #$10
  BNE .TRY_SW1
  JMP .FACE_SOUTH1
.TRY_SW1:
  CPY #$20
  BNE .TRY_WEST1
  JMP .FACE_SW1
.TRY_WEST1
  CPY #$40
  BNE .TRY_NW1
  JMP .FACE_WEST1
.TRY_NW1
  CPY #$80
  BNE .TRY_NORTH1
  JMP .FACE_NW1
.FACE_NORTH1:
  LDY #$01
  STY INDEX1
  LDY #$00
  STY FLIPPED1
  LDY #$00
  STY TDIR1
  JMP .EXIT1
.FACE_NE1:
  LDY #$04
  STY INDEX1
  LDY #$40
  STY FLIPPED1
  LDY #$02
  STY TDIR1
  JMP .EXIT1
.FACE_EAST1:
  LDY #$00
  STY INDEX1
  LDY #$00
  STY FLIPPED1
  LDY #$04
  STY TDIR1
  JMP .EXIT1
.FACE_SE1:
  LDY #$03
  STY INDEX1
  LDY #$00
  STY FLIPPED1
  LDY #$08
  STY TDIR1
  JMP .EXIT1
.FACE_SOUTH1:
  LDY #$01
  STY INDEX1
  LDY #$80
  STY FLIPPED1
  LDY #$10
  STY TDIR1
  JMP .EXIT1
.FACE_SW1:
  LDY #$04
  STY INDEX1
  LDY #$80
  STY FLIPPED1
  LDY #$20
  STY TDIR1
  JMP .EXIT1
.FACE_WEST1:
  LDY #$00
  STY INDEX1
  LDY #$40
  STY FLIPPED1
  LDY #$40
  STY TDIR1
  JMP .EXIT1
.FACE_NW1:
  LDY #$04
  STY INDEX1
  LDY #$00
  STY FLIPPED1
  LDY #$80
  STY TDIR1
  JMP .EXIT1
.EXIT1:
  RTS

NORTH_E_B1: subroutine
  JSR TANK0_HIT
  LDX TANK_HIT
  CPX #$01
  BEQ .EXIT_NB1
  LDX X4
  CPX #$CE   
  BCS .NORTH_TDB1
  LDX X4
  CPX #$B8   
  BCS .NORTH_TYB1
  LDX X4
  CPX #$8E   
  BCS .NORTH_TDB1
  LDX X4
  CPX #$6E   
  BCS .NORTH_TYB1
  LDX X4
  CPX #$4E   
  BCS .NORTH_TDB1
  LDX X4
  CPX #$36   
  BCS .NORTH_TYB1
  JMP .NORTH_TDB1
.NORTH_TYB1:
  LDX Y4
  CPX #$C0      
  BCS .NORTH_TDB1
  LDX Y4
  CPX #$8B     
  BCS .EXIT_NB1
  LDX Y4
  CPX #$50    
  BCS .NORTH_TDB1
  LDX Y4
  CPX #$2E
  BCS .EXIT_NB1
.NORTH_TDB1:
  LDA #$04
  CMP Y4
  BCS .EXIT_NB1
.DO_NW:
  LDA #$04
  CMP X4
  BCS .EXIT_NB1
  LDA #$00
  JMP .EXIT1
.DO_NE:
  LDA X4
  CMP #$F8
  BCS .EXIT_NB1
  LDA #$00
  JMP .EXIT1
.EXIT_NB1
  LDA #$01
  JMP .EXIT1
.EXIT1
  RTS

NORTH_BALL1: subroutine
  LDY X4
  CPY #$D5   
  BCS .NORTH_TDB1
  CPY #$B5   
  BCS .NORTH_TYB1
  CPY #$95   
  BCS .NORTH_TDB1
  CPY #$75   
  BCS .NORTH_TYB1
  CPY #$55   
  BCS .NORTH_TDB1
  CPY #$32   
  BCS .NORTH_TYB1
  JMP .NORTH_TDB1
.NORTH_TYB1:
  LDY Y4
  CPY #$C0      
  BCS .NORTH_TDB1
  CPY #$8B     
  BCS .EXIT_NB1
  CPY #$50    
  BCS .NORTH_TDB1
  CPY #$2E
  BCS .EXIT_NB1
.NORTH_TDB1:
  LDY #$04
  CPY Y4
  BCS .EXIT_NB1
  LDY BDIR1
  CPY #$02
  BEQ .DO_NE
.DO_NW:
  LDY #$04
  CPY X4
  BCS .EXIT_NB1
  LDY #$00
  JMP .EXIT1
.DO_NE:
  LDY X4
  CPY #$F8
  BCS .EXIT_NB1
  LDA #$00
  JMP .EXIT1
.EXIT_NB1
  LDA #$01
  JMP .EXIT1
.EXIT1
  RTS

SOUTH_BALL1: subroutine
  JSR TANK0_HIT
  LDY TANK_HIT
  CPY #$01
  BEQ .EXITSB1
  LDY X4
  CPY #$CF
  BCS .SOUTH_TWB1
  CPY #$A9
  BCS .SOUTH_TYB1
  CPY #$8E
  BCS .SOUTH_TWB1
  CPY #$69
  BCS .SOUTH_TYB1
  CPY #$4D
  BCS .SOUTH_TWB1
  CPY #$2B
  BCS .SOUTH_TYB1
  JMP .SOUTH_TWB1
.EXITSB1:
  JMP .EXIT_SB1
.SOUTH_TYB1:
  LDY Y4
  CPY #$C0      
  BCS .SOUTH_TWB1
  CPY #$A4      
  BCS .EXIT_SB1
  CPY #$68    
  BCS .SOUTH_TWB1
  CPY #$60   
  BCS .EXIT_SB1
  CPY #$40   
  BCS .EXIT_SB1
  CPY #$32   
  BCS .EXIT_SB1
  JMP .SOUTH_TWB1
.SOUTH_TWB1:
  LDY Y4
  CPY #$D6
  BCS .EXIT_SB1
.SOUTH_TDB1:
  LDY Y4
  CPY #$D5
  BCS .EXIT_SB1
  LDY BDIR1
  CPY #$08
  BEQ .DO_SE
.DO_SW:
  LDY X4
  CPY #$F8
  BCS .EXIT_SB1
  LDY #$00
  JMP .EXIT1
.DO_SE:
  LDY X4
  CPY #$04
  BCS .EXIT_SB1
  LDA #$00
  JMP .EXIT1
.EXIT_SB1
  LDA #$01
  JMP .EXIT1
.EXIT1
  RTS

SOUTH_WEST_BALL1: subroutine
  JSR TANK0_HIT
  LDX TANK_HIT
  CPX #$01
  BEQ .EXITSB1
  LDX X4
  CPX #$CF
  BCS .SOUTH_TWB1
  LDX X4
  CPX #$A9
  BCS .SOUTH_TYB1
  LDX X4
  CPX #$8E
  BCS .SOUTH_TWB1
  LDX X4
  CPX #$69
  BCS .SOUTH_TYB1
  LDX X4
  CPX #$4B
  BCS .SOUTH_TWB1
  LDX X4
  CPX #$2B
  BCS .SOUTH_TYB1
  JMP .SOUTH_TWB1
.EXITSB1:
  JMP .EXIT_SB1
.SOUTH_TYB1:
  LDX Y4
  CPX #$B5      
  BCS .SOUTH_TWB1
  CPX #$90      
  BCS .EXIT_SB1
  CPX #$5A
  BCS .SOUTH_TWB1   
  CPX #$40   
  BCS .EXIT_SB1
  CPX #$32   
  BCS .EXIT_SB1
  JMP .SOUTH_TWB1
.SOUTH_TWB1:
  LDX Y4
  CPX #$D5
  BCS .EXIT_SB1
.SOUTH_TDB1:
  LDX Y4
  CPX #$D6
  BCS .EXIT_SB1
.DO_SE:
  LDX X4
  CPX #$F8
  BCS .EXIT_SB1
  LDA #$00
  JMP .EXIT1
.EXIT_SB1
  LDA #$01
  JMP .EXIT1
.EXIT1
  RTS

NORTH_WEST_BALL1: subroutine
  JSR TANK0_HIT
  LDX TANK_HIT
  CPX #$01
  BEQ .EXIT_NB1
  LDX X4
  CPX #$D0   
  BCS .NORTH_TDB1
  LDX X4
  CPX #$A6   
  BCS .NORTH_TYB1
  LDX X4
  CPX #$92   
  BCS .NORTH_TDB1
  LDX X4
  CPX #$66   
  BCS .NORTH_TYB1
  LDX X4
  CPX #$50   
  BCS .NORTH_TDB1
  LDX X4
  CPX #$27   
  BCS .NORTH_TYB1
  JMP .NORTH_TDB1
.NORTH_TYB1:
  LDX Y4
  CPX #$BC      
  BCS .NORTH_TDB1
  LDX Y4
  CPX #$90     
  BCS .EXIT_NB1
  LDX Y4
  CPX #$50    
  BCS .NORTH_TDB1
  LDX Y4
  CPX #$2E
  BCS .EXIT_NB1
.NORTH_TDB1:
  LDA #$04
  CMP Y4
  BCS .EXIT_NB1
.DO_NW:
  LDA #$04
  CMP X4
  BCS .EXIT_NB1
  LDA #$00
  JMP .EXIT1
.EXIT_NB1
  LDA #$01
  JMP .EXIT1
.EXIT1
  RTS

SOUTH_E_B1: subroutine
  JSR TANK0_HIT
  LDY TANK_HIT
  CPY #$01
  BEQ .EXITSB1
  LDY X4
  CPY #$CF
  BCS .SOUTH_TWB1
  CPY #$A9
  BCS .SOUTH_TYB1
  CPY #$8E
  BCS .SOUTH_TWB1
  CPY #$69
  BCS .SOUTH_TYB1
  CPY #$4D
  BCS .SOUTH_TWB1
  CPY #$2B
  BCS .SOUTH_TYB1
  JMP .SOUTH_TWB1
.EXITSB1:
  JMP .EXIT_SB1
.SOUTH_TYB1:
  LDY Y4
  CPY #$B0      
  BCS .SOUTH_TWB1
  CPY #$90      
  BCS .EXIT_SB1
  CPY #$60
  BCS .SOUTH_TWB1   
  CPY #$40   
  BCS .EXIT_SB1
  CPY #$32   
  BCS .EXIT_SB1
  JMP .SOUTH_TWB1
.SOUTH_TWB1:
  LDY Y4
  CPY #$D5
  BCS .EXIT_SB1
.SOUTH_TDB1:
  LDY Y4
  CPY #$D6
  BCS .EXIT_SB1
.DO_SE:
  LDY X4
  CPY #$F8
  BCS .EXIT_SB1
  LDA #$00
  JMP .EXIT1
.EXIT_SB1
  LDA #$01
  JMP .EXIT1
.EXIT1
  RTS

EAST_WEST1: subroutine
  CMP #$01              
  BEQ .TURN_EAST1       
  JMP .TURN_WEST1
.TURN_EAST1:  
  LDA TDIR1
  CMP #$04
  BEQ .FNDR2
  CMP #$02     
  BNE .EAST_TEST_ZERO1
  LDA #$04
  STA TDIR1
  JSR FIND_DIRECTION1
  JMP .EXIT1
.FNDR2:
  JSR FIND_DIRECTION1
  JMP .EXIT1
.EAST_TEST_ZERO1:
  CMP #$00
  BNE .EAST_TEST_ONE1
  JMP .EAST_FILL_NE1
.EAST_TEST_ONE1:
  CMP #$01
  BNE .EAST_TEST_TWO1
  JMP .EAST_FILL_NE1
.EAST_FILL_NE1:
  LDA #$02
  STA TDIR1
  JSR FIND_DIRECTION1
  JMP .EXIT1
.EAST_TEST_TWO1:
  CMP #$02
  BNE .EAST_TEST_NW0
  LDA #$04
  STA TDIR1
  JSR FIND_DIRECTION1
  JMP .EXIT1
.EAST_TEST_NW0:
  CMP #$80
  BNE .EAST_SHIFT_LEFT1
  LDA #$00
  STA TDIR1
  JSR FIND_DIRECTION1
.EAST_SHIFT_LEFT1:
  LDA TDIR1
  CMP #$80     
  ROR      
  STA TDIR1
  JSR FIND_DIRECTION1
  JMP .EXIT1
.TURN_WEST1:
  LDA TDIR1
  CMP #$40
  BEQ .FDIR3
  CMP #$80     
  BNE .WEST_TEST_ZERO1
  LDA #$40
  STA TDIR1
.FDIR3:
  JSR FIND_DIRECTION1
  JMP .EXIT1
.WEST_TEST_ZERO1:
  CMP #$00
  BNE .WEST_TEST_ONE1
  JMP .WEST_FILL_NE1
.WEST_TEST_ONE1:
  CMP #$01
  BNE .WEST_TEST_TWO1
  JMP .WEST_FILL_NE1
.WEST_FILL_NE1:
  LDA #$80
  STA TDIR1
  JSR FIND_DIRECTION1
  JMP .EXIT1
.WEST_TEST_TWO1:
  CMP #$02
  BNE .WEST_SHIFT_LEFT1
  LDA #$00
  STA TDIR1
  JSR FIND_DIRECTION1
  JMP .EXIT1
.WEST_SHIFT_LEFT1:
  LDA TDIR1
  ASL
  STA TDIR1
  JSR FIND_DIRECTION1
  JMP .EXIT1
.EXIT1:
  RTS

NORTH_SOUTH1: subroutine
  CMP #$01     
  BEQ .TURN_SOUTH1  
  JMP .TURN_NORTH1
.EXIT_NS1:
  JMP .EXIT1
.FIND:
  JSR FIND_DIRECTION1
  JMP .EXIT1
.TURN_NORTH1:
  LDA TDIR1
  CMP #$00
  BEQ .FDIR1
  CMP #$10
  BCS .NORTH_SHIFT_LEFT1
  JMP .NORTH_SHIFT_RIGHT1
.FDIR1:
  JSR FIND_DIRECTION1
  JMP .EXIT1
;6502 doesn't have ASR, Do:
;1.) CMP #$80
;2.) ROR
.NORTH_SHIFT_RIGHT1:
  LDA TDIR1
  CMP #$80     
  ROR      
  STA TDIR1
  CMP #$01
  BNE .FDIR1A
  LDA #$00
  STA TDIR1  
.NORTH_SHIFT_LEFT1:
  LDA TDIR1
  ASL
  STA TDIR1
  JMP .FDIR1A
.FDIR1A:
  JSR FIND_DIRECTION1
  JMP .EXIT1
.TURN_SOUTH1:
  LDA TDIR1
  CMP #$10
  BEQ .FIND_DIRECTION_SOUTH1
  STA TDIR1
  JMP .SOUTH_TEST_ZERO1
.SOUTH_TEST_ZERO1:
  CMP #$00
  BNE .SOUTH_TEST_ONE1
  JMP .SOUTH_FILL_NE1
.SOUTH_TEST_ONE1:
  CMP #$01
  BEQ .SOUTH_FILL_NE1
.SOUTH_TEST_HEX_800:
  LDA TDIR1
  CMP #$80
  BNE .TEST_REST1
  LDA #$40
  STA TDIR1
  JMP .FIND_DIRECTION_SOUTH1
.SOUTH_FILL_NE1:
  LDA #$02
  STA TDIR1
  JMP .FIND_DIRECTION_SOUTH1
.TEST_REST1:
  LDA TDIR1
  CMP #$10
  BCS .SOUTH_SHIFT_RIGHT1
  JMP .SOUTH_SHIFT_LEFT1
.SOUTH_SHIFT_RIGHT1:
  LDA TDIR1
  CMP #$80     
  ROR      
  STA TDIR1
  JSR FIND_DIRECTION1
  JMP .EXIT1
.SOUTH_SHIFT_LEFT1:
  LDA TDIR1
  ASL
  STA TDIR1
  JSR FIND_DIRECTION1
  JMP .EXIT1
.FIND_DIRECTION_SOUTH1:
  JSR FIND_DIRECTION1
.EXIT1:
  RTS

MOVE_TANK1: subroutine
  LDY TDIR1
  CPY #$00
  BEQ .NORTH
  CPY #$02
  BEQ .NEAST
  CPY #$04
  BEQ .EAST
  CPY #$08
  BEQ .SEAST
  CPY #$10
  BEQ .SOUTH
  CPY #$20
  BEQ .SWEST
  CPY #$40
  BEQ .WEST
  CPY #$80
  BEQ .NWEST
  JMP .EXIT1
.NORTH:
  JMP .N1
.NEAST:
  JMP .NE1
.EAST:
  JMP .E1
.SEAST:
  JMP .SE1
.SOUTH:
  JMP .S1
.SWEST:
  JMP .SW1
.WEST:
  JMP .W1
.NWEST:
  JMP .NW1
.N1:
  JSR TEST_NORTH1
  CMP #$01
  BEQ .N_MOVE
  JMP .N_NO_MOVE
.N_MOVE:
  DEC Y3
  DEC Y3
  DEC Y3
  DEC Y3
.N_NO_MOVE:
  LDA BALL_MOVING1
  CMP #$01
  BEQ .N_EXIT
  JSR TURNOFFBALL1
.N_EXIT:
  JMP .EXIT1
.NE1:
  JSR TEST_NORTH1
  CMP #$01
  BEQ .NE_EAST
  JMP .NE_NO_MOVE
.NE_EAST
  JSR TEST_EAST1
  CMP #$01
  BEQ .NE_MOVE
  JMP .NE_NO_MOVE
.NE_MOVE:
  DEC Y3
  INC X3
  DEC Y3
  INC X3
.NE_NO_MOVE:
  LDA BALL_MOVING1
  CMP #$01
  BEQ .NE_EXIT
  JSR TURNOFFBALL1
.NE_EXIT:
  JMP .EXIT1
.E1:
  JSR TEST_EAST1
  CMP #$01
  BEQ .E_MOVE
  JMP .E_NO_MOVE
.E_MOVE:
  INC X3
  INC X3
  INC X3
  INC X3
.E_NO_MOVE:
  LDA BALL_MOVING1
  CMP #$01
  BEQ .E_EXIT
  JSR TURNOFFBALL1
.E_EXIT:
  JMP .EXIT1
.SE1:
  JSR TEST_SOUTH1
  CMP #$01
  BEQ .SE_EAST
  JMP .SE_NO_MOVE
.SE_EAST
  JSR TEST_EAST1
  CMP #$01
  BEQ .SE_MOVE
  JMP .SE_NO_MOVE
.SE_MOVE:
  INC Y3
  INC X3
  INC Y3
  INC X3
.SE_NO_MOVE:
  LDA BALL_MOVING1
  CMP #$01
  BEQ .SE_EXIT
  JSR TURNOFFBALL1
.SE_EXIT:
  JMP .EXIT1
.S1:
  JSR TEST_SOUTH1
  CMP #$01
  BEQ .S_MOVE
  JMP .S_NO_MOVE
.S_MOVE:
  INC Y3
  INC Y3
  INC Y3
  INC Y3
.S_NO_MOVE:
  LDA BALL_MOVING1
  CMP #$01
  BEQ .S_EXIT
  JSR TURNOFFBALL1
.S_EXIT:
  JMP .EXIT1
.SW1:
  JSR TEST_SOUTH1
  CMP #$01
  BEQ .SW_WEST
  JMP .SW_NO_MOVE
.SW_WEST
  JSR TEST_WEST1
  CMP #$01
  BEQ .SW_MOVE
  JMP .SW_NO_MOVE
.SW_MOVE:
  INC Y3
  DEC X3
  INC Y3
  DEC X3
.SW_NO_MOVE:
  LDA BALL_MOVING1
  CMP #$01
  BEQ .SW_EXIT
  JSR TURNOFFBALL1
.SW_EXIT:
  JMP .EXIT1
.W1:
  JSR TEST_WEST1
  CMP #$01
  BEQ .W_MOVE
  JMP .W_NO_MOVE
.W_MOVE:
  DEC X3
  DEC X3
  DEC X3
  DEC X3
.W_NO_MOVE:
  LDA BALL_MOVING1
  CMP #$01
  BEQ .W_EXIT
  JSR TURNOFFBALL1
.W_EXIT:
  JMP .EXIT1
.NW1:
  JSR TEST_NORTH1
  CMP #$01
  BEQ .NW_WEST
  JMP .NW_NO_MOVE
.NW_WEST
  JSR TEST_WEST1
  CMP #$01
  BEQ .NW_MOVE
  JMP .NW_NO_MOVE
.NW_MOVE:
  DEC Y3
  DEC X3
  DEC Y3
  DEC X3
.NW_NO_MOVE:
  LDA BALL_MOVING1
  CMP #$01
  BEQ .NW_EXIT
  JSR TURNOFFBALL1
.NW_EXIT:
  JMP .EXIT1
.EXIT1:
  RTS

RELOAD1: subroutine
  LDY #$00
  STY T4               
  LDY X3
  STY X4
  LDY Y3
  STY Y4
  LDY #$00 
  STY BALL_MOVING1
  RTS

TEST_NORTH1: subroutine
  LDY X3
  CPY #$D0
  BCS .N_WALL
  CPY #$A5
  BCS .N4
  CPY #$90
  BCS .N_WALL
  CPY #$68
  BCS .N4
  CPY #$50
  BCS .N_WALL
  CPY #$27
  BCS .N4
  JMP .N_WALL
.N4:
  JSR NORTH_COLLISION1
  CMP #$01
  BEQ .N_NO_MOVE
.N_WALL:
  LDY Y3
  CPY #$12
  BEQ .N_NO_MOVE
  CPY #$11
  BEQ .N_NO_MOVE
  CPY #$10
  BEQ .N_NO_MOVE
  CPY #$0F
  BEQ .N_NO_MOVE
.N_MOVE:
  LDY #$01
  JMP .EXIT
.N_NO_MOVE:
  LDY #$00
.EXIT:
  TYA
  RTS

TEST_SOUTH1: subroutine
  LDX X3
  CPX #$D0
  BCS .S_WALL
  CPX #$A5
  BCS .S2
  CPX #$90
  BCS .S_WALL
  CPX #$68
  BCS .S2
  CPX #$50
  BCS .S_WALL
  CPX #$27
  BCS .S2
  JMP .S_WALL
.S2:
  JSR SOUTH_COLLISION1
  CMP #$01
  BEQ .S_NO_MOVE
  JMP .S_WALL
.S3:
  LDY X3
  CPY #$90
  BCS .S_WALL  
  CPY #$70
  BCS .S4
  CPY #$52
  BCS .S_WALL
  CPY #$27
  BCS .S4
  JMP .S_WALL
.S4:
  JSR SOUTH_COLLISION1
  CMP #$01
  BEQ .S_NO_MOVE
  JMP .S_MOVE
.S_WALL:
  LDY Y3
  CPY #$D4
  BEQ .S_NO_MOVE
  CPY #$D5
  BEQ .S_NO_MOVE
  CPY #$D6
  BEQ .S_NO_MOVE
  CPY #$D7
  BEQ .S_NO_MOVE
.S_MOVE:
  LDY #$01
  JMP .EXIT
.S_NO_MOVE:
  LDY #$00
.EXIT:
  TYA
  RTS

TEST_EAST1: subroutine
  LDY Y3
  CPY #$C0
  BCS .E_WALL
.E2:
  CPY #$86
  BCS .E3
  JMP .E4
.E3:
  JSR EAST_COLLISION1
  CMP #$01
  BEQ .ENM1
  JMP .E_MOVE
.ENM1:
  JMP .E_NO_MOVE
.E4:
  LDY Y3
  BCS .E_WALL
  CPY #$60
  BCS .E_WALL
  JMP .E5
.E5:
  LDY Y3
  CPY #$26
  BCS .E6
  JMP .E_WALL
.E6:
  JSR EAST_COLLISION1
  CMP #$01
  BEQ .E_NO_MOVE
  JMP .E_MOVE
.E_WALL:
  LDY X3
  CPY #$ED
  BEQ .E_NO_MOVE
  CPY #$EE
  BEQ .E_NO_MOVE
  CPY #$EF
  BEQ .E_NO_MOVE
  CPY #$F0
  BEQ .E_NO_MOVE
.E_MOVE:
  LDY #$01
  JMP .EXIT
.E_NO_MOVE:
  LDY #$00
.EXIT:
  TYA
  RTS

TEST_WEST1: subroutine
  LDY Y3
  CPY #$C0
  BCS .W_WALL
.W2:
  LDY Y3
  CPY #$86
  BCS .W3
  JMP .W4
.W3:
  JSR WEST_COLLISION1
  CMP #$01
  BEQ .WNM
  JMP .W4
.WNM:
  JMP .W_NO_MOVE
.W4:
  LDY Y3
  CPY #$60
  BCS .W_WALL
  JMP .W5
.W5:
  LDY Y3
  CPY #$27
  BCS .W6
  JMP .W_WALL
.W6:
  JSR WEST_COLLISION1
  CMP #$01
  BEQ .W_NO_MOVE
.W_WALL:
  LDY X3
  CPY #$0B
  BEQ .W_NO_MOVE
  CPY #$0A
  BEQ .W_NO_MOVE
  CPY #$09
  BEQ .W_NO_MOVE
  CPY #$08
  BEQ .W_NO_MOVE
  JMP .W_MOVE
.W_MOVE:
  LDY #$01
  JMP .EXIT
.W_NO_MOVE:
  LDY #$00
.EXIT:
  TYA
  RTS

EAST_COLLISION1: subroutine  
.FG_JK:
  LDY X3
  CPY #$EB
  BCS .COLL
.EH_IL:
  CPY #$A6
  BEQ .COLL
  CPY #$A7
  BEQ .COLL
  CPY #$A8
  BEQ .COLL
.BC_NO:
  CPY #$66
  BEQ .COLL
  CPY #$67
  BEQ .COLL
  CPY #$68
  BEQ .COLL
.XX_ZZ:
  CPY #$26
  BEQ .COLL
  CPY #$27
  BEQ .COLL
  CPY #$28
  BEQ .COLL
  CPY #$29
  BEQ .COLL
  CPY #$2A
  BEQ .COLL
  JMP .NO_COLL
.COLL:
  LDY #$01
  JMP .EXIT
.NO_COLL:
  LDY #$00
.EXIT
  TYA
  RTS

WEST_COLLISION1: subroutine  
.AC1_MP1:
  LDY X3
  CPY #$0A
  BEQ .COLL
  CPY #$09
  BEQ .COLL  
  CPY #$08
  BEQ .COLL  
.AC_MP:
  CPY #$52
  BEQ .COLL
  CPY #$51
  BEQ .COLL  
  CPY #$50
  BEQ .COLL  
.EH_IL:
  CPY #$92
  BEQ .COLL
  CPY #$91
  BEQ .COLL
  CPY #$90
  BEQ .COLL
.NN_BB:
  CPY #$70
  BEQ .COLL
  CPY #$6F
  BEQ .COLL
  CPY #$6E
  BEQ .COLL
.FG_JK:
  CPY #$D2
  BEQ .COLL
  CPY #$D1
  BEQ .COLL
  CPY #$D0
  BEQ .COLL
  JMP .NO_COLL
.COLL:
  LDY #$01
  JMP .EXIT
.NO_COLL:
  LDY #$00
.EXIT
  TYA
  RTS

NORTH_COLLISION1: subroutine  
.FG_JK:
  LDY Y3
  CPY #$C0
  BEQ .COLL
  CPY #$BF
  BEQ .COLL
  CPY #$BE
  BEQ .COLL
.EH_IL:
  CPY #$60
  BEQ .COLL
  CPY #$5F
  BEQ .COLL
  CPY #$5E
  BEQ .COLL
.N_WALL:
  CPY #$12
  BEQ .COLL
  CPY #$11
  BEQ .COLL
  CPY #$10
  BEQ .COLL
  CPY #$0A
  BEQ .COLL
  JMP .NO_COLL
.COLL:
  LDY #$01
  JMP .EXIT
.NO_COLL:
  LDY #$00
.EXIT
  TYA
  RTS

SOUTH_COLLISION1: subroutine  
.FG_JK:
  LDY Y3
  CPY #$26
  BEQ .COLL
  CPY #$27
  BEQ .COLL
  CPY #$28
  BEQ .COLL
.EH_IL:
  CPY #$84
  BEQ .COLL
  CPY #$85
  BEQ .COLL
  CPY #$86
  BEQ .COLL
.S_WALL:
  CPY #$D4
  BEQ .COLL
  CPY #$D5
  BEQ .COLL
  CPY #$D6
  BEQ .COLL
  CPY #$D7
  BEQ .COLL
  JMP .NO_COLL
.COLL:
  LDY #$01
  JMP .EXIT
.NO_COLL:
  LDY #$00
.EXIT
  TYA
  RTS

TAKE_SHOT1: subroutine
  JSR GUN_NOISE
  LDY #$01
  CPY BALL_MOVING1
  JSR TURNONBALL1
  LDY TDIR1
  STY BDIR1
  RTS

MOVE_BALL1: subroutine
  JSR DRAWBALL1
  LDY BDIR1
  CPY #$00
  BEQ .N_BALL1
  CPY #$02
  BEQ .NE_BALL1
  CPY #$04
  BEQ .E_BALL1
  CPY #$08
  BEQ .SE_BALL1
  CPY #$10
  BEQ .S_BALL1
  CPY #$20
  BEQ .SW_BALL1
  CPY #$40
  BEQ .W_BALL1
  CPY #$80
  BEQ .NW_BALL1
.N_BALL1:
  JMP .N_MBALL1
.NE_BALL1:
  JMP .NE_MBALL1
.E_BALL1:
  JMP .E_MBALL1
.SE_BALL1:
  JMP .SE_MBALL1
.S_BALL1:
  JMP .S_MBALL1
.SW_BALL1:
  JMP .SW_MBALL1
.W_BALL1:
  JMP .W_MBALL1
.NW_BALL1:
  JMP .NW_MBALL1
.N_MBALL1
  DEC Y4
  DEC Y4
  JMP .DRAW1
.NE_MBALL1:
  DEC Y4
  INC X4
  JMP .DRAW1
.E_MBALL1:
  INC X4
  INC X4
  JMP .DRAW1
.SE_MBALL1:
  INC Y4
  INC X4
  JMP .DRAW1
.S_MBALL1:
  INC Y4
  INC Y4
  JMP .DRAW1
.SW_MBALL1:
  INC Y4
  DEC X4
  JMP .DRAW1
.W_MBALL1:
  DEC X4
  DEC X4
  JMP .DRAW1
.NW_MBALL1:
  DEC Y4
  DEC X4
  JMP .DRAW1
.EXIT_BALL1_B2:
  JSR TURNOFFBALL1
  JMP .EXIT_BALL1
.EXIT_BALL1_B1:
  JSR TURNOFFBALL1
  JMP .EXIT_BALL1
.DRAW1:
  JSR DRAWBALL1
  LDY BDIR1
  CPY #$00
  BEQ .NBALL1   
  CPY #$02  
  BEQ .NEBALL1 
  CPY #$04
  BEQ .EBALL1
  CPY #$08
  BEQ .SEBALL1
  CPY #$10
  BEQ .SBALL1
  CPY #$20
  BEQ .SWBALL1
  CPY #$40 
  BEQ .WBALL1
  CPY #$80
  BEQ .NWBALL1
  JMP .EXIT_TEST1
.NBALL1
  JMP .NB1
.NEBALL1:
  JMP .NEB1
.EBALL1:
  JMP .EB1
.SEBALL1:
  JMP .SEB1
.SBALL1:
  JMP .SB1
.SWBALL1:
  JMP .SWB1
.WBALL1:
  JMP .WB1
.NWBALL1:
  JMP .NWB1
.NB1:
  JSR TANK0_HIT
  LDY TANK_HIT
  CPY #$01
  BEQ .EXIT_NB1
  LDY X4
  CPY #$CF
  BCS .NORTH_TWB1
  CPY #$A9
  BCS .NORTH_TYB1
  CPY #$8E
  BCS .NORTH_TWB1
  CPY #$69
  BCS .NORTH_TYB1
  CPY #$4D
  BCS .NORTH_TWB1
  CPY #$2B
  BCS .NORTH_TYB1
  JMP .NORTH_TWB1
.NORTH_TYB1:
  LDY Y4
  CPY #$C0      
  BCS .NORTH_TWB1
  CPY #$A4      
  BCS .EXIT_NB1
  CPY #$50    
  BCS .NORTH_TWB1
  CPY #$30
  BCS .EXIT_NB1
  JMP .NORTH_TWB1
.NORTH_TWB1:
  LDY #$04
  CPY Y4
  BCS .EXIT_NB1
.NORTH_TDB1:
  JMP .EXIT_TEST1
.EXIT_NB1
  JMP .EXIT1
.NEB1:
  JSR TANK0_HIT
  LDY TANK_HIT
  CPY #$01
  BNE .NEB1A
  JMP .EXIT1
.NEB1A:
  JSR NORTH_E_B1
  CMP #$00
  BEQ .EXIT_TEST1_CALL
  JMP .EXIT1
.EXIT_TEST1_CALL:
  JMP .EXIT_TEST1
.SEB1:
  JSR TANK0_HIT
  LDY TANK_HIT
  CPY #$01
  BNE .SEB1A
  JMP .EXIT1
.SEB1A:
  JSR SOUTH_E_B1
  CMP #$00
  BEQ .EXIT_TEST1_SE
  JMP .EXIT1
.EXIT_TEST1_SE:
  JMP .EXIT_TEST1
.SWB1:
  JSR TANK0_HIT
  LDY TANK_HIT
  CPY #$01
  BNE .SWB1A
  JMP .EXIT1
.SWB1A:
  JSR SOUTH_WEST_BALL1
  CMP #$00
  BEQ .EXITB1SW
  JMP .EXIT1
.EXITB1SW:
  JMP .EXIT_TEST1
.NWB1:
  JSR TANK0_HIT
  LDY TANK_HIT
  CPY #$01
  BNE .NWB1A
  JMP .EXIT1
.NWB1A:
  JSR NORTH_WEST_BALL1
  CMP #$00
  BEQ .EXIT_TEST1_CALL1
  JMP .EXIT1
.EXIT_TEST1_CALL1:
  JMP .EXIT_TEST1
.SB1:
  JSR TANK0_HIT
  LDY TANK_HIT
  CPY #$01
  BEQ .EXIT_SB1
  LDY X4
  CPY #$CF
  BCS .SOUTH_TWB1
  CPY #$A9
  BCS .SOUTH_TYB1
  CPY #$8E
  BCS .SOUTH_TWB1
  CPY #$69
  BCS .SOUTH_TYB1
  CPY #$4D
  BCS .SOUTH_TWB1
  CPY #$2B
  BCS .SOUTH_TYB1
  JMP .SOUTH_TWB1
.SOUTH_TYB1:
  LDY Y4
  CPY #$C0      
  BCS .SOUTH_TWB1
  CPY #$A4      
  BCS .EXIT_SB1
  CPY #$68    
  BCS .SOUTH_TWB1
  CPY #$60   
  BCS .EXIT_SB1
  CPY #$40   
  BCS .EXIT_SB1
  CPY #$32   
  BCS .EXIT_SB1
  JMP .SOUTH_TWB1
.SOUTH_TWB1:
  LDY Y4
  CPY #$D8
  BCS .EXIT_SB1
.SOUTH_TDB1:
  JMP .EXIT_TEST1
.EXIT_SB1
  JMP .EXIT1
.WB1:
  JSR TANK0_HIT
  LDY TANK_HIT
  CPY #$01
  BEQ .EXIT_WEST_B1
  LDY Y4
  CPY #$BD
  BCS .WEST_TWB1
  CPY #$8A
  BCS .WEST_TXB1
  CPY #$5D
  BCS .WEST_TWB1
  CPY #$2A
  BCS .WEST_TXB1
  JMP .WEST_TWB1
.WEST_TXB1:
  LDY X4
  CPY #$D1   
  BCS .WEST_TWB1
  CPY #$BE   
  BCS .EXIT_WEST_B1
  CPY #$8F   
  BCS .WEST_TWB1
  CPY #$80   
  BCS .EXIT_WEST_B1
  CPY #$50   
  BCS .WEST_TWB1
  CPY #$39   
  BCS .EXIT_WEST_B1
  JMP .WEST_TWB1
.WEST_TWB1:
  LDY #$04
  CPY X4
  BCS .EXIT_WEST_B1
.WEST_TDB1:
  JMP .EXIT_TEST1
.EXIT_WEST_B1
  JMP .EXIT1
.EB1:
  JSR TANK0_HIT
  LDY TANK_HIT
  CPY #$01
  BEQ .EXIT_E_B1
  LDY Y4
  CPY #$BD
  BCS .EAST_TWB1
  CPY #$8A
  BCS .EAST_TXB1
  CPY #$5D
  BCS .EAST_TWB1
  CPY #$2A
  BCS .EAST_TXB1
  JMP .EAST_TWB1
.EAST_TXB1:
  LDY X4
  CPY #$D1   
  BCS .EAST_TWB1
  CPY #$BE   
  BCS .EXIT_E_B1
  CPY #$8F   
  BCS .EAST_TWB1
  CPY #$80   
  BCS .EXIT_E_B1
  CPY #$50   
  BCS .EAST_TWB1
  CPY #$39   
  BCS .EXIT_E_B1
  JMP .EAST_TWB1
.EAST_TWB1:
  LDA X4
  CMP #$F8
  BCS .EXIT_E_B1
.EAST_TDB1:
  JMP .EXIT_TEST1
.EXIT_E_B1
  JMP .EXIT1
.EXIT_TEST1:  
  RTS
.EXIT_BALL1:
  RTS
.EXIT1:
  JSR TURNOFFBALL1
  RTS

;did first tank get hit?
TANK0_HIT: subroutine
  LDY BDIR1
  CPY $00
  BEQ .CHECK_NORTH1
  CPY #$04
  BEQ .CHECK_EAST1
  CPY #$10
  BEQ .CHECK_SOUTH1
  CPY #$40
  BEQ .CHECK_WEST1
  JMP .CHECK_ANGLE1
.CHECK_WEST1:
  JMP .WEST1
.CHECK_NORTH1:
  LDY Y1
  CPY Y3
  BCS .EB
  LDY Y1
  CPY Y4
  BCS .CHECK_X_N_BR1
  JMP .EXIT1
.CHECK_X_N_BR1
  JMP .CHECK_X_NORTH1
.CHECK_EAST1:
  LDY X3
  CPY X1
  BCS .EXIT_BR1
  LDY X4   
  CPY X1   
  BCS .CHECK_Y_BR1     
  JMP .EXIT1     
.CHECK_SOUTH1:
  LDY Y3
  CPY Y1
  BCS .EB
  LDY Y4  
  CPY Y1  
  BCS .CHECK_X_S_BR1  
  JMP .EB
.CHECK_X_S_BR1:
  JMP .CHECK_X_SOUTH1
.EB:
  JMP .EXIT1     
.WEST1:
  LDY X1
  CPY X3
  BCS .EXIT_BR1
  LDY X1   
  CPY X4   
  BCS .CHECK_Y_BR1
  JMP .EXIT1
.CHECK_Y_BR1
  JMP .CHECK_Y0
  JMP .EXIT1     
.EXIT_BR1:
  JMP .EXIT1     
.CHECK_ANGLE1:
  LDY Y1
  LDX X1
  LDA X1
  DEX
  DEX
  DEX
  DEX
  DEX
  DEX
  DEX
  DEX
  CLC
  ADC #$08  
  CPY Y4
  BNE .EXIT1
  CPX X4
  BCS .EXIT1
  CMP X4
  BCS .TANK0_HIT_BR1
  JMP .EXIT1
.TANK0_HIT_BR1:
  JMP .TANK0_HIT
  JMP .EXIT1
.CHECK_Y0:
  LDA Y1
  SEC      
  SBC #$05     
  CMP Y4
  BCS .EXIT1    
  CLC      
  ADC #$09     
  CMP Y4
  BCS .TANK0_HIT
  JMP .EXIT1    
.CHECK_X_SOUTH1:
  LDA X1
  SEC
  SBC #$04      
  CMP X4
  BCS .EXIT1
  CLC      
  ADC #$09
  CMP X4
  BCS .TANK0_HIT
  JMP .EXIT1    
.CHECK_X_NORTH1:
  LDA X1
  SEC
  SBC #$04
  CMP X4
  BCS .EXIT1
  CLC      
  ADC #$09    
  CMP X4
  BCS .TANK0_HIT
  JMP .EXIT1        
.TANK0_HIT:  
  LDY TANK_HIT
  CPY #$01
  BEQ .EXIT1  
  LDY #$01
  STY TANK_HIT
  INC $C1
  JSR DISP_SCORE
  JSR MARK_X_ON_TANK0
  JSR TURNOFFBALL0
  JSR TURNOFFBALL1
.EXIT1:
  RTS

MARK_X_ON_TANK0: subroutine
  LDY #$00
  STY T1
  LDY #$95     
  STY T1
  RTS

DRAWBALL1: subroutine
  SLEEP 1000
  LDY #$A4
  STY T4
  RTS

TURNOFFBALL1: subroutine
  LDY #$00
  STY T4   
  LDY #$00
  STY BALL_MOVING1
  JSR SILENCE_NOISE
  RTS

TURNONBALL1: subroutine
  LDY #$00
  STY TANK1_MOVING
  LDY #$A4
  STY T4   
  LDY #$01
  STY BALL_MOVING1
  RTS

;tank direction lookup table
DIR_TBL:
  hex 00 01 ff 00	; 01,-01

;note: open,view,manipulate sprite
;images with YYCHR dev tool.

;sprites table
SPRITES_TBL:
  ;Y, tile, attribute, X
  hex 16 A0 00 10   ;sprite 1 - tank0
  hex 16 A4 00 10   ;sprite 2 - ball0
  hex D0 A0 42 E8   ;sprite 3 - tank1
  hex D0 A4 00 E8   ;sprite 4 - ball1
  hex 18 80 00 58   ;sprite 5 - black score 
  hex 18 80 00 68   ;sprite 6 - red score
  hex 18 80 00 78   ;sprite 7 - black label "B"
  hex 18 80 00 88   ;sprite 8 - red label "R"

;moving sprites. sprites 1 thru
;4. See above SPRITES_TBL.
;points to sprites in tank.chr
TILES_TBL:
  hex A0 91 95 A2 
  hex 93 A2 93 00 
  hex 00 00 00 00 
  hex 00 00 00 00 

;Background table 1
;points to sprites in tank.chr
BG1_TBL:
  hex C4 C4 C4 C4 C4 C4 C4 C4 C4 C4 C4 C4 C4 C4 C4 C4 
  hex C4 C4 C4 C4 C4 C4 C4 C4 C4 C4 C4 C4 C4 C4 C4 C4
    
  hex C4 C4 C4 C4 C4 C4 C4 C4 C4 C4 C4 C4 C4 C4 C4 C4 
  hex C4 C4 C4 C4 C4 C4 C4 C4 C4 C4 C4 C4 C4 C4 C4 C4

  hex C4 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 
  hex 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 C4
  
  hex C4 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 
  hex 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 C4

;Background table 2
;points to sprites in tank.chr
BG2_TBL:
  hex C4 80 80 80 80 80 C5 C4 C4 C5 80 80 80 80 C5 C4 
  hex C4 C5 80 80 80 80 C5 C4 C4 C5 80 80 80 80 80 C4
  
  hex C4 80 80 80 80 80 C4 C4 C4 C4 80 80 80 80 C4 C4 
  hex C4 C4 80 80 80 80 C4 C4 C4 C4 80 80 80 80 80 C4
  
  hex C4 80 80 80 80 80 C4 C4 C4 C4 80 80 80 80 C4 C4 
  hex C4 C4 80 80 80 80 C4 C4 C4 C4 80 80 80 80 80 C4

  hex C4 80 80 80 80 80 C4 C4 C4 C4 80 80 80 80 C4 C4 
  hex C4 C4 80 80 80 80 C4 C4 C4 C4 80 80 80 80 80 C4

  hex C4 80 80 80 80 80 C4 C4 C4 C4 80 80 80 80 C4 C4 
  hex C4 C4 80 80 80 80 C4 C4 C4 C4 80 80 80 80 80 C4
  
  hex C4 80 80 80 80 80 C5 C4 C4 C5 80 80 80 80 C5 C4 
  hex C4 C5 80 80 80 80 C5 C4 C4 C5 80 80 80 80 80 C4

;background palette table
;blue as first setting (#$1C)
;the rest black (#$0F)
BG_PAL_TBL:
  hex 1C		    
  hex 0F 0F 0F 0F
  hex 0F 0F 0F 0F
  hex 00 0F 0F 0F
  hex 00 0F 0F 0F

;sprite palette table
;(#$0F) black. (#$30) white.
;(#$06) red. black and red
;currently used. (#$22)
;is ignored.
SPR_PAL_TBL:
  hex 22 0F 30 30	
  hex 22 0F 30 30	
  hex 22 06 30 30 
  hex 22 0F 30 30	

;points to number tiles for game score
;in tank.chr
SCORE_TBL:
  hex D0 D1 D2 D3 D4 D5 D6 D7 C7 B7

;CPU Vectors	
  NES_VECTORS

;Tile set
  org $10000
  incbin "tank.chr"
  incbin "tank.chr"